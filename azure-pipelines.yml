trigger:
  branches:
    include:
      - migrate-to-azure

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: CheckBrokenLinks
  displayName: 'Check broken links'
  steps:
  - script: |
      curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      sudo apt-get install -y nodejs
    displayName: 'Install Node.js'
    
  - script: |
      npm install -g broken-link-checker
      echo "Node.js version:"
      node -v
      echo "npm version:"
      npm -v
      echo "check-broken-links version:"
      blc --version || echo "blc command not found"
    displayName: 'Install check-broken-links'

  - script: |
      export PATH=$(npm bin -g):$PATH
      blc https://docs.visionify.ai/ --one-page-only --max-connections=3 --color=always
    displayName: 'Check for broken links'


# Job 2: Deploy Docs
- job: deploydocs
  displayName: 'Deploy documentation'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true
  - script: |
      pip install mkdocs-material
      mkdocs gh-deploy --force
    displayName: 'Deploy MkDocs'

# Job 3: Deploy PR Previews
- job: deploy_pr_previews
  displayName: 'Deploy PR previews'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true
  - script: |
      pip install mkdocs-material mkdocs-page-pdf
      mkdocs build --clean -d ./build/
    displayName: 'Build MkDocs'
  - script: |
      curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      sudo apt-get install -y nodejs
      npm install -g gh-pages
    displayName: 'Install gh-pages'
  - script: |
      export PATH=$(npm bin -g):$PATH
      gh-pages -d ./build
    displayName: 'Deploy PR Preview'



  # # Job 4: Upload to Azure Blob Storage
  # - job: upload-to-azure-blob-storage
  #   displayName: Upload scenarios.json and each_scenario_details to Azure Blob Storage
  #   runsOn: ubuntu-latest
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/azure-storage-pipeline'))
  #   steps:
  #     - checkout: self
  #     - name: Check for modifications
  #       id: check-modified
  #       run: |
  #         if grep -q "scenarios.json" <<< "$(git diff-tree --no-commit-id --name-only -r HEAD^ HEAD)"; then
  #           echo "modified=true" >> $GITHUB_ENV
  #         fi
  #         if grep -q "each_scenario_details" <<< "$(git diff-tree --no-commit-id --name-only -r HEAD^ HEAD)"; then
  #           echo "each_scenario_details_modified=true" >> $GITHUB_ENV
  #         fi

  #     - name: Compare files
  #       if: eq(variables['modified'], 'true')
  #       run: |
  #         LOCAL_HASH=$(md5sum scenarios.json | awk '{ print $1 }')
  #         REMOTE_HASH=$(az storage blob show --account-name docsvisionify --container-name docs-images --name scenarios.json --query properties.contentSettings.contentMd5 --output tsv --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}")
  #         if [ "$LOCAL_HASH" != "$REMOTE_HASH" ]; then
  #           echo "files-different=true" >> $GITHUB_ENV
  #         fi

  #     - name: Check for changes in JSON files
  #       if: eq(variables['each_scenario_details_modified'], 'true')
  #       run: |
  #         CHANGED_JSON_FILES=$(git diff --name-only HEAD^ HEAD | grep '^each_scenario_details/.*\.json$' || true)
  #         if [ -n "$CHANGED_JSON_FILES" ]; then
  #           echo "json_files_changed=true" >> $GITHUB_ENV
  #         fi

  #     - name: Upload scenarios.json to Azure Blob Storage
  #       if: and(eq(variables['modified'], 'true'), eq(variables['files-different'], 'true'))
  #       env:
  #         AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
  #       script: |
  #         az storage blob upload --account-name docsvisionify --container-name docs-images --file scenarios.json --name scenarios.json --connection-string "${AZURE_STORAGE_CONNECTION_STRING}" --overwrite
  #         echo "scenarios.json uploaded successfully."

  #     - name: Echo no changes in JSON
  #       if: ne(variables['modified'], 'true')
  #       run: echo "No changes in scenarios.json file."

  #     - name: Upload changed JSON files
  #       if: and(eq(variables['each_scenario_details_modified'], 'true'), eq(variables['json_files_changed'], 'true'))
  #       env:
  #         AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
  #       run: |
  #         for file in $(git diff --name-only HEAD^ HEAD | grep '^each_scenario_details/.*\.json$'); do
  #           az storage blob upload --account-name docsvisionify --container-name docs-images --file "$file" --name "$file" --connection-string "${AZURE_STORAGE_CONNECTION_STRING}" --overwrite
  #           echo "$file uploaded successfully."
  #         done

  #     - name: Echo no changes in folder
  #       if: ne(variables['each_scenario_details_modified'], 'true')
  #       run: echo "No changes in each_scenario_details folder."
